pipeline{
    agent any
    environment{
        PATH = "/opt/maven3/bin:$PATH"
    }
    stages{
        stage("Git Checkout"){
            steps{
                git credentialsId: 'GIT_CREDENTIALS', url: 'https://github.com/srinicloud87/spring-boot-mongo-docker.git'
            }
        }
        stage("Maven Build"){
            steps{
                sh "mvn clean package"
                
            }
        }
        stage('Build Docker Image'){
            steps{
                 sh 'docker build -t srinidockerhub87/spring-boot-mongo .'
                 sh 'docker build -t tomcat:${BUILD_NUMBER} .'
                 sh 'docker run -itd --name srini28 -p 3400:8080 tomcat:${BUILD_NUMBER}'
             }
         }
         stage('Push Docker Image'){
             steps{
                  withCredentials([string(credentialsId: 'DOCKER_HUB_CREDENTIALS', variable: 'DOCKER_HUB_CREDENTIALS')]) {
                      sh "docker login -u srinidockerhub87 -p ${DOCKER_HUB_CREDENTIALS}"
            }
            sh 'docker push srinidockerhub87/spring-boot-mongo'
        }
      }
      stage("Deploy To Kuberates Cluster"){
          steps{
       kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNETES_CLUSTER_CONFIG',
         enableConfigSubstitution: true
        )
     }
}

        
    }
